{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/providers/WalletProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport WalletContext, { initialWalletContext } from '../contexts/WalletContext';\nimport UserType from '../enums/UserType';\nimport { useWeb3React } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletProvider = (children, props) => {\n  _s();\n\n  const {\n    account,\n    chainId,\n    activate\n  } = useWeb3React();\n  const [state, setState] = useState(initialWalletContext);\n  const TempCollateralAddress = \"0x6A040998EeB628Cf40683833812F0463C4FC79F9\";\n  const TempBorrowerAddress = \"0xB91e9f737B2227E92A373fb071b66B10eC6770d0\";\n\n  const InitialState = () => {\n    switch (account) {\n      case TempCollateralAddress:\n        setState({ ...state,\n          userType: UserType.Collateral\n        });\n        break;\n\n      case TempBorrowerAddress:\n        setState({ ...state,\n          userType: UserType.Borrowers\n        });\n        break;\n\n      default:\n        if (!!account) {\n          setState({ ...state,\n            userType: UserType.Guest\n          });\n        } else {\n          setState({ ...state,\n            userType: UserType.User\n          });\n        }\n\n    }\n  };\n\n  useEffect(() => {\n    InitialState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: { ...state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletProvider, \"w+WrcVtJeyQGEgJO98HfIW/V/Ow=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = WalletProvider;\nexport default WalletProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/providers/WalletProvider.tsx"],"names":["useEffect","useState","WalletContext","initialWalletContext","UserType","useWeb3React","WalletProvider","children","props","account","chainId","activate","state","setState","TempCollateralAddress","TempBorrowerAddress","InitialState","userType","Collateral","Borrowers","Guest","User"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,IAAwBC,oBAAxB,QAAoE,2BAApE;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAGA,MAAMC,cAAwB,GAAG,CAACC,QAAD,EAAgBC,KAAhB,KAA+B;AAAA;;AAC9D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAAiCN,YAAY,EAAnD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAiBE,oBAAjB,CAAlC;AAEA,QAAMW,qBAAqB,GAAG,4CAA9B;AACA,QAAMC,mBAAmB,GAAG,4CAA5B;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,YAAQP,OAAR;AACE,WAAKK,qBAAL;AACED,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,UAAAA,QAAQ,EAAEb,QAAQ,CAACc;AAA/B,SAAD,CAAR;AACA;;AACF,WAAKH,mBAAL;AACEF,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,UAAAA,QAAQ,EAAEb,QAAQ,CAACe;AAA/B,SAAD,CAAR;AACA;;AACF;AACE,YAAG,CAAC,CAACV,OAAL,EAAc;AACZI,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,YAAAA,QAAQ,EAAEb,QAAQ,CAACgB;AAA/B,WAAD,CAAR;AACD,SAFD,MAEO;AACLP,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,YAAAA,QAAQ,EAAEb,QAAQ,CAACiB;AAA/B,WAAD,CAAR;AACD;;AAZL;AAcD,GAfD;;AAiBArB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,EAC7B,GAAGJ;AAD0B,KAA/B;AAAA,cAGGL;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApCD;;GAAMD,c;UACmCD,Y;;;KADnCC,c;AAsCN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport WalletContext, { initialWalletContext, IWalletContext } from '../contexts/WalletContext';\nimport UserType from '../enums/UserType';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../core/connectors/injectedConnector';\n\nconst WalletProvider: React.FC = (children: any, props: any) => {\n  const { account, chainId, activate } = useWeb3React();\n  const [state, setState] = useState<IWalletContext>(initialWalletContext);\n\n  const TempCollateralAddress = \"0x6A040998EeB628Cf40683833812F0463C4FC79F9\";\n  const TempBorrowerAddress = \"0xB91e9f737B2227E92A373fb071b66B10eC6770d0\";\n\n  const InitialState = () => {\n    switch (account) {\n      case TempCollateralAddress:\n        setState({ ...state, userType: UserType.Collateral })\n        break;\n      case TempBorrowerAddress:\n        setState({ ...state, userType: UserType.Borrowers })\n        break;\n      default:\n        if(!!account) {\n          setState({ ...state, userType: UserType.Guest })\n        } else {\n          setState({ ...state, userType: UserType.User })\n        }\n    }\n  }\n\n  useEffect(() => {\n    InitialState()\n  }, []);\n\n\n  return (\n    <WalletContext.Provider value={{\n      ...state\n    }}>\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport default WalletProvider;"]},"metadata":{},"sourceType":"module"}