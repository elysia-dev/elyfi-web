{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/modules/mobile/service/Service.tsx\",\n    _s = $RefreshSig$();\n\nimport '../css/styleM.scss';\nimport Navigation from '../component/Navigation';\nimport TokenListing from './component/TokenListing';\nimport ServiceBackground from './images/service-background.png';\nimport TokenContext from '../../../contexts/TokenContext';\nimport { useContext } from 'react';\nimport TokenTypes from '../../../enums/TokenType';\nimport { useTranslation } from 'react-i18next';\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../../../core/connectors/injectedConnector';\nimport { useHistory } from 'react-router-dom';\nimport { useInactiveListener } from '../../../hooks/connectHoots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet throttle_flag = false;\n\nconst throttle = (func, delay) => {\n  if (!throttle_flag) {\n    func();\n    throttle_flag = true;\n    setTimeout(() => {\n      throttle_flag = false;\n    }, delay);\n  }\n};\n\nconst Service = () => {\n  _s();\n\n  // const { account, activate, deactivate } = useWeb3React();\n  const history = useHistory(); // const [connected, setConnected] = useState<boolean>(false);\n\n  const {\n    tokenlist\n  } = useContext(TokenContext);\n  const {\n    t\n  } = useTranslation();\n  const context = useWeb3React();\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    error\n  } = context;\n  const [activatingConnector, setActivatingConnector] = React.useState();\n  const activating = InjectedConnector === activatingConnector;\n  const connected = InjectedConnector === connector;\n  const disabled = !props.triedEager || !!activatingConnector || !!error;\n  useInactiveListener(!props.triedEager || !!activatingConnector);\n  let isDisconnect = !error && chainId;\n  const buttonText = isDisconnect ? 'Disconnect' : activating ? 'Connectting' : 'Connect';\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // const connectWallet = () => {\n  //   activate(InjectedConnector);\n  // };\n  // useEffect(() => {\n  //   connectWallet();\n  //   return () => {\n  //     deactivate();\n  //   };\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elysia--mobile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `service`,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        style: {\n          backgroundImage: `url(${ServiceBackground})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__title-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main__title-text\",\n            children: t(\"app.title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main__title-text--blue\",\n            children: t(\"app.coming-soon\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"main__subtitle-text\",\n            children: t(\"app.title-content\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tokens\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!isDisconnect) {\n              activate(InjectedConnector);\n            } else {\n              deactivate();\n            }\n          },\n          className: \"ConnectButton\",\n          disabled: connected,\n          style: {\n            backgroundColor: '#3679B5',\n            borderRadius: 10,\n            borderWidth: 0,\n            width: '100%',\n            height: 50\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#fff',\n              fontWeight: 'bold',\n              fontSize: 15\n            },\n            children: connected ? t('Register.Connected') : t('Register.Connect')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TokenListing, {\n          header: t(\"app.token\"),\n          tokenlist: tokenlist.filter(item => {\n            return item.type === TokenTypes.CRYPTO;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenListing, {\n          header: t(\"app.asset-token\"),\n          tokenlist: tokenlist.filter(item => {\n            return item.type === TokenTypes.ASSETS;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Service, \"P0kESnJJCoP8GAuM4ibLxfMLCW4=\", false, function () {\n  return [useHistory, useTranslation, useWeb3React, useInactiveListener];\n});\n\n_c = Service;\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/modules/mobile/service/Service.tsx"],"names":["Navigation","TokenListing","ServiceBackground","TokenContext","useContext","TokenTypes","useTranslation","React","useWeb3React","InjectedConnector","useHistory","useInactiveListener","throttle_flag","throttle","func","delay","setTimeout","Service","history","tokenlist","t","context","connector","library","chainId","account","activate","deactivate","active","error","activatingConnector","setActivatingConnector","useState","activating","connected","disabled","props","triedEager","isDisconnect","buttonText","useEffect","undefined","backgroundImage","backgroundColor","borderRadius","borderWidth","width","height","color","fontWeight","fontSize","filter","item","type","CRYPTO","ASSETS"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,KAAP,MAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA0BC,mBAA1B,QAAqD,6BAArD;;AAGA,IAAIC,aAAa,GAAG,KAApB;;AACA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAmBC,KAAnB,KAAqC;AACpD,MAAI,CAACH,aAAL,EAAoB;AAClBE,IAAAA,IAAI;AACJF,IAAAA,aAAa,GAAG,IAAhB;AACAI,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,aAAa,GAAG,KAAhB;AACD,KAFS,EAEPG,KAFO,CAAV;AAGD;AACF,CARD;;AAWA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAMC,OAAO,GAAGR,UAAU,EAA1B,CAFoB,CAGpB;;AACA,QAAM;AAAES,IAAAA;AAAF,MAAgBf,UAAU,CAACD,YAAD,CAAhC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAQd,cAAc,EAA5B;AAGA,QAAMe,OAAO,GAAGb,YAAY,EAA5B;AACA,QAAM;AAAEc,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA,UAAlD;AAA8DC,IAAAA,MAA9D;AAAsEC,IAAAA;AAAtE,MAAgFR,OAAtF;AAEA,QAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDxB,KAAK,CAACyB,QAAN,EAAtD;AAEA,QAAMC,UAAU,GAAGxB,iBAAiB,KAAKqB,mBAAzC;AACA,QAAMI,SAAS,GAAGzB,iBAAiB,KAAKa,SAAxC;AACA,QAAMa,QAAQ,GAAG,CAACC,KAAK,CAACC,UAAP,IAAqB,CAAC,CAACP,mBAAvB,IAA8C,CAAC,CAACD,KAAjE;AAEAlB,EAAAA,mBAAmB,CAAC,CAACyB,KAAK,CAACC,UAAP,IAAqB,CAAC,CAACP,mBAAxB,CAAnB;AAEA,MAAIQ,YAAY,GAAG,CAACT,KAAD,IAAUL,OAA7B;AACA,QAAMe,UAAU,GAAGD,YAAY,GAAG,YAAH,GAAmBL,UAAU,GAAG,aAAH,GAAmB,SAA/E;AAGA1B,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpB,QAAIV,mBAAmB,IAAIA,mBAAmB,KAAKR,SAAnD,EAA8D;AAC5DS,MAAAA,sBAAsB,CAACU,SAAD,CAAtB;AACD;AACF,GAJD,EAIG,CAACX,mBAAD,EAAsBR,SAAtB,CAJH,EAvBoB,CAgCpB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,KAAK,EAAE;AAAEoB,UAAAA,eAAe,EAAG,OAAMxC,iBAAkB;AAA5C,SAAjC;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,sBAAkCkB,CAAC,CAAC,WAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA,sBAAwCA,CAAC,CAAC,iBAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,sBAAoCA,CAAC,CAAC,mBAAD;AAArC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA,gCACA;AACE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAI,CAACkB,YAAL,EAAmB;AACjBZ,cAAAA,QAAQ,CAACjB,iBAAD,CAAR;AACD,aAFD,MAEO;AACLkB,cAAAA,UAAU;AACX;AACF,WAPH;AAQE,UAAA,SAAS,EAAC,eARZ;AASE,UAAA,QAAQ,EAAEO,SATZ;AAUE,UAAA,KAAK,EAAE;AACLS,YAAAA,eAAe,EAAE,SADZ;AAELC,YAAAA,YAAY,EAAE,EAFT;AAGLC,YAAAA,WAAW,EAAE,CAHR;AAILC,YAAAA,KAAK,EAAE,MAJF;AAKLC,YAAAA,MAAM,EAAE;AALH,WAVT;AAAA,iCAkBE;AAAG,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,UAAU,EAAE,MAA7B;AAAqCC,cAAAA,QAAQ,EAAE;AAA/C,aAAV;AAAA,sBACGhB,SAAS,GAAGd,CAAC,CAAC,oBAAD,CAAJ,GAA6BA,CAAC,CAAC,kBAAD;AAD1C;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,gBADA,eAuBE,QAAC,YAAD;AACE,UAAA,MAAM,EAAEA,CAAC,CAAC,WAAD,CADX;AAEE,UAAA,SAAS,EAAED,SAAS,CAACgC,MAAV,CAAkBC,IAAD,IAAU;AACpC,mBAAOA,IAAI,CAACC,IAAL,KAAchD,UAAU,CAACiD,MAAhC;AACD,WAFU;AAFb;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA6BE,QAAC,YAAD;AACE,UAAA,MAAM,EAAElC,CAAC,CAAC,iBAAD,CADX;AAEE,UAAA,SAAS,EAAED,SAAS,CAACgC,MAAV,CAAkBC,IAAD,IAAU;AACpC,mBAAOA,IAAI,CAACC,IAAL,KAAchD,UAAU,CAACkD,MAAhC;AACD,WAFU;AAFb;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CA7FD;;GAAMtC,O;UAEYP,U,EAGFJ,c,EAGEE,Y,EAShBG,mB;;;KAjBIM,O;AA+FN,eAAeA,OAAf","sourcesContent":["import '../css/styleM.scss';\nimport Navigation from '../component/Navigation';\nimport TokenListing from './component/TokenListing';\nimport ServiceBackground from './images/service-background.png'\nimport { useMediaQuery } from 'react-responsive';\nimport TokenContext from '../../../contexts/TokenContext';\nimport { useContext } from 'react';\nimport TokenTypes from '../../../enums/TokenType';\nimport { useTranslation } from 'react-i18next';\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../../../core/connectors/injectedConnector';\nimport { useHistory } from 'react-router-dom';\nimport { useEagerConnect, useInactiveListener } from '../../../hooks/connectHoots';\n\n\nlet throttle_flag = false;\nconst throttle = (func: () => void, delay: number) => {\n  if (!throttle_flag) {\n    func();\n    throttle_flag = true;\n    setTimeout(() => {\n      throttle_flag = false;\n    }, delay);\n  }\n};\n\n\nconst Service = () => {\n  // const { account, activate, deactivate } = useWeb3React();\n  const history = useHistory();\n  // const [connected, setConnected] = useState<boolean>(false);\n  const { tokenlist } = useContext(TokenContext);\n  const { t } = useTranslation();\n\n\n  const context = useWeb3React()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  const [activatingConnector, setActivatingConnector] = React.useState()\n\n  const activating = InjectedConnector === activatingConnector\n  const connected = InjectedConnector === connector\n  const disabled = !props.triedEager || !!activatingConnector || !!error\n\n  useInactiveListener(!props.triedEager || !!activatingConnector)\n\n  let isDisconnect = !error && chainId\n  const buttonText = isDisconnect ? 'Disconnect' : (activating ? 'Connectting' : 'Connect' )\n\n\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n\n\n\n  // const connectWallet = () => {\n  //   activate(InjectedConnector);\n  // };\n\n  // useEffect(() => {\n  //   connectWallet();\n  //   return () => {\n  //     deactivate();\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"elysia--mobile\">\n      <div className={`service`}>\n        <section className=\"main\" style={{ backgroundImage: `url(${ServiceBackground})` }}>\n          <Navigation />\n          <div className=\"main__title-wrapper\">\n            <h1 className=\"main__title-text\">{t(\"app.title\")}</h1>\n            <h1 className=\"main__title-text--blue\">{t(\"app.coming-soon\")}</h1>\n            <p className=\"main__subtitle-text\">{t(\"app.title-content\")}</p>\n          </div>\n        </section>\n        <section className=\"tokens\">\n        <button\n          onClick={() => {\n            if (!isDisconnect) {\n              activate(InjectedConnector)\n            } else {\n              deactivate()\n            }\n          }}\n          className=\"ConnectButton\"\n          disabled={connected}\n          style={{\n            backgroundColor: '#3679B5',\n            borderRadius: 10,\n            borderWidth: 0,\n            width: '100%',\n            height: 50,\n          }}\n        >\n          <p style={{ color: '#fff', fontWeight: 'bold', fontSize: 15 }}>\n            {connected ? t('Register.Connected') : t('Register.Connect')}\n          </p>\n        </button>\n          <TokenListing\n            header={t(\"app.token\")}\n            tokenlist={tokenlist.filter((item) => {\n              return item.type === TokenTypes.CRYPTO\n            })}\n          />\n          <TokenListing\n            header={t(\"app.asset-token\")}\n            tokenlist={tokenlist.filter((item) => {\n              return item.type === TokenTypes.ASSETS\n            })}\n          />\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Service;"]},"metadata":{},"sourceType":"module"}