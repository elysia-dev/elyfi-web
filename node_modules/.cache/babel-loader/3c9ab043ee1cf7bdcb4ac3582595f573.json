{"ast":null,"code":"import React,{useEffect}from'react';import{Switch,Route,BrowserRouter as Router}from\"react-router-dom\";import\"./i18n/i18n\";import{useMediaQuery}from\"react-responsive\";import{useTranslation}from'react-i18next';import Main from'./modules/pc/main/Main';import Service from'./modules/pc/service/Service';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useTranslation=useTranslation(),i18n=_useTranslation.i18n;var isPc=useMediaQuery({query:\"(min-width: 768px)\"});useEffect(function(){// ref http://www.lingoes.net/en/translator/langcode.htm\nvar lang=navigator.language;if(lang.includes('ko')){i18n.changeLanguage('ko');}else if(lang.includes('zh')){i18n.changeLanguage('zh');}},[]);var PcRouter=function PcRouter(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/service\",children:/*#__PURE__*/_jsx(Service,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(Main,{})})]})});};var MobileRouter=function MobileRouter(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/service\",children:/*#__PURE__*/_jsx(Service,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(Main,{})})]})});};return isPc?/*#__PURE__*/_jsx(PcRouter,{}):/*#__PURE__*/_jsx(MobileRouter,{});};export default App;","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/App.tsx"],"names":["React","useEffect","Switch","Route","BrowserRouter","Router","useMediaQuery","useTranslation","Main","Service","App","i18n","isPc","query","lang","navigator","language","includes","changeLanguage","PcRouter","MobileRouter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACEC,MADF,CAEEC,KAFF,CAGEC,aAAa,GAAIC,CAAAA,MAHnB,KAIO,kBAJP,CAKA,MAAO,aAAP,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,qBACCH,cAAc,EADf,CACRI,IADQ,iBACRA,IADQ,CAEhB,GAAMC,CAAAA,IAAI,CAAGN,aAAa,CAAC,CACzBO,KAAK,CAAE,oBADkB,CAAD,CAA1B,CAIAZ,SAAS,CAAC,UAAM,CACd;AACA,GAAMa,CAAAA,IAAI,CAAGC,SAAS,CAACC,QAAvB,CAEA,GAAIF,IAAI,CAACG,QAAL,CAAc,IAAd,CAAJ,CAAyB,CACvBN,IAAI,CAACO,cAAL,CAAoB,IAApB,EACD,CAFD,IAEO,IAAIJ,IAAI,CAACG,QAAL,CAAc,IAAd,CAAJ,CAAyB,CAC9BN,IAAI,CAACO,cAAL,CAAoB,IAApB,EACD,CACF,CATQ,CASN,EATM,CAAT,CAWA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,mBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,uBACE,KAAC,OAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,KAAC,IAAD,IADF,EAJF,GADF,EADF,CAYD,CAbD,CAcA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,mBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACA,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,uBACI,KAAC,OAAD,IADJ,EADA,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,KAAC,IAAD,IADF,EAJF,GADF,EADF,CAYD,CAbD,CAeA,MACER,CAAAA,IAAI,cACF,KAAC,QAAD,IADE,cAGF,KAAC,YAAD,IAJJ,CAMD,CApDD,CAsDA,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport \"./i18n/i18n\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useTranslation } from 'react-i18next';\nimport Main from './modules/pc/main/Main';\nimport Service from './modules/pc/service/Service';\n\nconst App = () => {\n  const { i18n } = useTranslation();\n  const isPc = useMediaQuery({\n    query: \"(min-width: 768px)\"\n  });\n\n  useEffect(() => {\n    // ref http://www.lingoes.net/en/translator/langcode.htm\n    const lang = navigator.language;\n\n    if (lang.includes('ko')) {\n      i18n.changeLanguage('ko')\n    } else if (lang.includes('zh')) {\n      i18n.changeLanguage('zh')\n    }\n  }, [])\n\n  const PcRouter = () => {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/service\">\n            <Service />\n          </Route>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n  const MobileRouter = () => {\n    return (\n      <Router>\n        <Switch>\n        <Route path=\"/service\">\n            <Service />\n          </Route>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n  return (\n    isPc ?\n      <PcRouter />\n      : \n      <MobileRouter />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}