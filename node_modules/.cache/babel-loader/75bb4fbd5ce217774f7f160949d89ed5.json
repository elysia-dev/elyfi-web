{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/modules/mobile/service/Service.tsx\",\n    _s = $RefreshSig$();\n\nimport '../css/styleM.scss';\nimport Navigation from '../component/Navigation';\nimport ServiceBackground from './images/service-background.png';\nimport TokenContext from '../../../contexts/TokenContext';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport React, { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../../../core/connectors/injectedConnector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet throttle_flag = false;\n\nconst throttle = (func, delay) => {\n  if (!throttle_flag) {\n    func();\n    throttle_flag = true;\n    setTimeout(() => {\n      throttle_flag = false;\n    }, delay);\n  }\n};\n\nconst Service = props => {\n  _s();\n\n  const {\n    account,\n    activate,\n    deactivate,\n    error\n  } = useWeb3React();\n  const [connected, setConnected] = useState(false);\n  const {\n    tokenlist\n  } = useContext(TokenContext);\n  const {\n    t\n  } = useTranslation(); // const context = useWeb3React()\n  // const { connector, library, chainId, account, activate, deactivate, active, error } = context\n  // const [activatingConnector, setActivatingConnector] = React.useState()\n  // const activating = InjectedConnector === activatingConnector\n  // const connected = InjectedConnector === connector\n  // const disabled = !props.triedEager || !!activatingConnector || !!error\n  // useInactiveListener(!props.triedEager || !!activatingConnector)\n  // let isDisconnect = !error && chainId\n  // const buttonText = isDisconnect ? 'Disconnect' : (activating ? 'Connectting' : 'Connect' )\n  // React.useEffect(() => {\n  //   if (activatingConnector && activatingConnector === connector) {\n  //     setActivatingConnector(undefined)\n  //   }\n  //   console.log(isDisconnect)\n  // }, [activatingConnector, connector])\n  // const connectWallet = () => {\n  //   activate(InjectedConnector);\n  // };\n  // useEffect(() => {\n  //   connectWallet();\n  //   return () => {\n  //     deactivate();\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    setConnected(!!account);\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elysia--mobile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `service`,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        style: {\n          backgroundImage: `url(${ServiceBackground})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__title-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main__title-text\",\n            children: t(\"app.title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main__title-text--blue\",\n            children: t(\"app.coming-soon\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"main__subtitle-text\",\n            children: t(\"app.title-content\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tokens\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log(error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!connected) {\n              activate(InjectedConnector);\n            } else {\n              deactivate();\n            }\n          },\n          className: \"ConnectButton\",\n          disabled: connected !== false,\n          style: {\n            backgroundColor: '#3679B5',\n            borderRadius: 10,\n            borderWidth: 0,\n            width: '100%',\n            height: 50\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#fff',\n              fontWeight: 'bold',\n              fontSize: 15\n            },\n            children: connected ? t('Register.Connected') : t('Register.Connect')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Service, \"mcR+FsSsjP0tn/dRTUfJ5GXiARI=\", false, function () {\n  return [useWeb3React, useTranslation];\n});\n\n_c = Service;\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/modules/mobile/service/Service.tsx"],"names":["Navigation","ServiceBackground","TokenContext","useContext","useTranslation","React","useEffect","useState","useWeb3React","InjectedConnector","throttle_flag","throttle","func","delay","setTimeout","Service","props","account","activate","deactivate","error","connected","setConnected","tokenlist","t","backgroundImage","console","log","backgroundColor","borderRadius","borderWidth","width","height","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import '../css/styleM.scss';\nimport Navigation from '../component/Navigation';\nimport TokenListing from './component/TokenListing';\nimport ServiceBackground from './images/service-background.png'\nimport { useMediaQuery } from 'react-responsive';\nimport TokenContext from '../../../contexts/TokenContext';\nimport { useContext } from 'react';\nimport TokenTypes from '../../../enums/TokenType';\nimport { useTranslation } from 'react-i18next';\nimport { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../../../core/connectors/injectedConnector';\nimport { useHistory } from 'react-router-dom';\nimport { useEagerConnect, useInactiveListener } from '../../../hooks/connectHoots';\n\n\nlet throttle_flag = false;\nconst throttle = (func: () => void, delay: number) => {\n  if (!throttle_flag) {\n    func();\n    throttle_flag = true;\n    setTimeout(() => {\n      throttle_flag = false;\n    }, delay);\n  }\n};\n\n\nconst Service = (props: any) => {\n  const { account, activate, deactivate, error } = useWeb3React();\n  const [connected, setConnected] = useState<boolean>(false);\n  const { tokenlist } = useContext(TokenContext);\n  const { t } = useTranslation();\n\n  // const context = useWeb3React()\n  // const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n\n  // const [activatingConnector, setActivatingConnector] = React.useState()\n\n  // const activating = InjectedConnector === activatingConnector\n  // const connected = InjectedConnector === connector\n  // const disabled = !props.triedEager || !!activatingConnector || !!error\n\n  // useInactiveListener(!props.triedEager || !!activatingConnector)\n\n  // let isDisconnect = !error && chainId\n  // const buttonText = isDisconnect ? 'Disconnect' : (activating ? 'Connectting' : 'Connect' )\n\n\n  // React.useEffect(() => {\n  //   if (activatingConnector && activatingConnector === connector) {\n  //     setActivatingConnector(undefined)\n  //   }\n  //   console.log(isDisconnect)\n  // }, [activatingConnector, connector])\n\n\n\n\n  // const connectWallet = () => {\n  //   activate(InjectedConnector);\n  // };\n\n  // useEffect(() => {\n  //   connectWallet();\n  //   return () => {\n  //     deactivate();\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    setConnected(!!account)\n  },[account])\n\n  return (\n    <div className=\"elysia--mobile\">\n      <div className={`service`}>\n        <section className=\"main\" style={{ backgroundImage: `url(${ServiceBackground})` }}>\n          <Navigation />\n          <div className=\"main__title-wrapper\">\n            <h1 className=\"main__title-text\">{t(\"app.title\")}</h1>\n            <h1 className=\"main__title-text--blue\">{t(\"app.coming-soon\")}</h1>\n            <p className=\"main__subtitle-text\">{t(\"app.title-content\")}</p>\n          </div>\n        </section>\n        <section className=\"tokens\">\n        <button onClick={() => {\n          console.log(error)\n        }} />\n        <button\n          onClick={() => {\n            if (!connected) {\n              activate(InjectedConnector)\n            } else {\n              deactivate()\n            }\n          }}\n          className=\"ConnectButton\"\n          disabled={connected !== false}\n          style={{\n            backgroundColor: '#3679B5',\n            borderRadius: 10,\n            borderWidth: 0,\n            width: '100%',\n            height: 50,\n          }}\n        >\n          <p style={{ color: '#fff', fontWeight: 'bold', fontSize: 15 }}>\n            {connected ? t('Register.Connected') : t('Register.Connect')}\n          </p>\n        </button>\n          {/* <TokenListing\n            header={t(\"app.token\")}\n            tokenlist={tokenlist.filter((item) => {\n              return item.type === TokenTypes.CRYPTO\n            })}\n          />\n          <TokenListing\n            header={t(\"app.asset-token\")}\n            tokenlist={tokenlist.filter((item) => {\n              return item.type === TokenTypes.ASSETS\n            })}\n          /> */}\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Service;"]},"metadata":{},"sourceType":"module"}