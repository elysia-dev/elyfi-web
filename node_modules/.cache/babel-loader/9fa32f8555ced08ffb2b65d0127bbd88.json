{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/modules/pc/component/Wallet.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../../../core/connectors/injectedConnector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet throttle_flag = false;\n\nconst throttle = (func, delay) => {\n  if (!throttle_flag) {\n    func();\n    throttle_flag = true;\n    setTimeout(() => {\n      throttle_flag = false;\n    }, delay);\n  }\n};\n\nconst Wallet = () => {\n  _s();\n\n  const {\n    account,\n    activate,\n    deactivate,\n    error,\n    active,\n    connector,\n    library,\n    chainId\n  } = useWeb3React();\n  const [connected, setConnected] = useState(false);\n  const [userAccount, setUserAccount] = useState(undefined);\n  useEffect(() => {\n    setConnected(!!account);\n  }, [account]);\n  useEffect(() => {\n    console.log(\"error : \" + JSON.stringify(account));\n  }, [account]);\n  useEffect(() => {\n    if (account) {\n      throttle(() => setUserAccount(account), 500);\n    }\n  }, [account]);\n  useEffect(() => {\n    if (active) {\n      activate(InjectedConnector);\n    }\n  }, []);\n  const [activatingConnector, setActivatingConnector] = useState(); // const activating = InjectedConnector === activatingConnector\n  // const connected = InjectedConnector === connector\n  // const disabled = !props.triedEager || !!activatingConnector || !!error\n  // useInactiveListener(!props.triedEager || !!activatingConnector)\n  // let isDisconnect = !error && chainId\n  // const buttonText = isDisconnect ? 'Disconnect' : (activating ? 'Connectting' : 'Connect' )\n  // React.useEffect(() => {\n  //   if (activatingConnector && activatingConnector === connector) {\n  //     setActivatingConnector(undefined)\n  //   }\n  //   console.log(isDisconnect)\n  // }, [activatingConnector, connector])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation__wallet\",\n      onClick: () => {\n        if (!connected) {\n          activate(InjectedConnector);\n        } else {\n          deactivate();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navigation__wallet__status\",\n        children: connected ? userAccount : \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(active);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Wallet, \"nSP7FIJRNgFmYmFpEQeOleZbQs8=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Wallet;\nexport default Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/modules/pc/component/Wallet.tsx"],"names":["useState","useEffect","useWeb3React","InjectedConnector","throttle_flag","throttle","func","delay","setTimeout","Wallet","account","activate","deactivate","error","active","connector","library","chainId","connected","setConnected","userAccount","setUserAccount","undefined","console","log","JSON","stringify","activatingConnector","setActivatingConnector"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;;;AAQA,IAAIC,aAAa,GAAG,KAApB;;AACA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAmBC,KAAnB,KAAqC;AACpD,MAAI,CAACH,aAAL,EAAoB;AAClBE,IAAAA,IAAI;AACJF,IAAAA,aAAa,GAAG,IAAhB;AACAI,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,aAAa,GAAG,KAAhB;AACD,KAFS,EAEPG,KAFO,CAAV;AAGD;AACF,CARD;;AAUA,MAAME,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,MAAxC;AAAgDC,IAAAA,SAAhD;AAA2DC,IAAAA,OAA3D;AAAoEC,IAAAA;AAApE,MAAgFf,YAAY,EAAlG;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAUsB,SAAV,CAA9C;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,YAAY,CAAC,CAAC,CAACT,OAAH,CAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAehB,OAAf,CAAzB;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAJ,EAAa;AACXL,MAAAA,QAAQ,CAAC,MAAMgB,cAAc,CAACX,OAAD,CAArB,EAAgC,GAAhC,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAJ,EAAY;AACVH,MAAAA,QAAQ,CAACR,iBAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM,CAACwB,mBAAD,EAAsBC,sBAAtB,IAAgD5B,QAAQ,EAA9D,CAzBmB,CA2BnB;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAI,CAACkB,SAAL,EAAgB;AACdP,UAAAA,QAAQ,CAACR,iBAAD,CAAR;AACD,SAFD,MAEO;AACLS,UAAAA,UAAU;AACX;AACF,OAPH;AAAA,6BAQE;AAAG,QAAA,SAAS,EAAC,4BAAb;AAAA,kBAA2CM,SAAS,GAAGE,WAAH,GAAiB;AAArE;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADA,eAWA;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACG,QAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAAoB;AAA5C;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADF;AAeD,CA5DD;;GAAML,M;UACkFP,Y;;;KADlFO,M;AA8DN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport InjectedConnector from '../../../core/connectors/injectedConnector';\n\nimport { ethers } from 'ethers';\nimport { useHistory } from 'react-router-dom';\nimport { useEagerConnect, useInactiveListener } from '../../../hooks/connectHoots';\n\ntype Account = string | null | undefined;\n\nlet throttle_flag = false;\nconst throttle = (func: () => void, delay: number) => {\n  if (!throttle_flag) {\n    func();\n    throttle_flag = true;\n    setTimeout(() => {\n      throttle_flag = false;\n    }, delay);\n  }\n};\n\nconst Wallet = () => {\n  const { account, activate, deactivate, error, active, connector, library, chainId } = useWeb3React();\n  const [connected, setConnected] = useState<boolean>(false);\n  const [userAccount, setUserAccount] = useState<Account>(undefined);\n\n  useEffect(() => {\n    setConnected(!!account)\n  }, [account])\n\n  useEffect(() => {\n    console.log(\"error : \" + JSON.stringify(account))\n  }, [account])\n\n  useEffect(() => {\n    if (account) {\n      throttle(() => setUserAccount(account), 500);\n    }\n  }, [account]);\n\n  useEffect(() => {\n    if (active) {\n      activate(InjectedConnector)\n    }\n  }, [])\n\n  const [activatingConnector, setActivatingConnector] = useState()\n\n  // const activating = InjectedConnector === activatingConnector\n  // const connected = InjectedConnector === connector\n  // const disabled = !props.triedEager || !!activatingConnector || !!error\n\n  // useInactiveListener(!props.triedEager || !!activatingConnector)\n\n  // let isDisconnect = !error && chainId\n  // const buttonText = isDisconnect ? 'Disconnect' : (activating ? 'Connectting' : 'Connect' )\n\n\n  // React.useEffect(() => {\n  //   if (activatingConnector && activatingConnector === connector) {\n  //     setActivatingConnector(undefined)\n  //   }\n  //   console.log(isDisconnect)\n  // }, [activatingConnector, connector])\n\n\n  return (\n    <>\n    <div className=\"navigation__wallet\" \n      onClick={() => {\n        if (!connected) {\n          activate(InjectedConnector)\n        } else {\n          deactivate()\n        }\n      }}>\n      <p className=\"navigation__wallet__status\">{connected ? userAccount : \"Connect Wallet\"}</p>\n    </div>\n    <button onClick={() => {console.log(active)}} />\n    </>\n  );\n}\n\nexport default Wallet;"]},"metadata":{},"sourceType":"module"}