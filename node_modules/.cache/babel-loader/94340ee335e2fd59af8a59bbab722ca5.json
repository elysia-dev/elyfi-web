{"ast":null,"code":"var numberFormat=function numberFormat(inputNumber){var si=[{value:1,symbol:\"\"},{value:1E3,symbol:\" K\"},{value:1E6,symbol:\" M\"},{value:1E9,symbol:\" B\"},{value:1E12,symbol:\" T\"},{value:1E15,symbol:\" P\"},{value:1E18,symbol:\" E\"}];var rx=/\\.0+$|(\\.[0-9]*[1-9])0+$/;var i;for(i=si.length-1;i>0;i--){if(inputNumber>=si[i].value){break;}}return(inputNumber/si[i].value).toFixed(2).replace(rx,\"$1\")+si[i].symbol;};export default numberFormat;","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/utiles/numberFormat.tsx"],"names":["numberFormat","inputNumber","si","value","symbol","rx","i","length","toFixed","replace"],"mappings":"AAAA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,WAAD,CAAyB,CAC5C,GAAMC,CAAAA,EAAE,CAAG,CACT,CAAEC,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,EAApB,CADS,CAET,CAAED,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,IAAtB,CAFS,CAGT,CAAED,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,IAAtB,CAHS,CAIT,CAAED,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,IAAtB,CAJS,CAKT,CAAED,KAAK,CAAE,IAAT,CAAeC,MAAM,CAAE,IAAvB,CALS,CAMT,CAAED,KAAK,CAAE,IAAT,CAAeC,MAAM,CAAE,IAAvB,CANS,CAOT,CAAED,KAAK,CAAE,IAAT,CAAeC,MAAM,CAAE,IAAvB,CAPS,CAAX,CASA,GAAMC,CAAAA,EAAE,CAAG,0BAAX,CACA,GAAIC,CAAAA,CAAJ,CACA,IAAKA,CAAC,CAAGJ,EAAE,CAACK,MAAH,CAAY,CAArB,CAAwBD,CAAC,CAAG,CAA5B,CAA+BA,CAAC,EAAhC,CAAoC,CAClC,GAAIL,WAAW,EAAIC,EAAE,CAACI,CAAD,CAAF,CAAMH,KAAzB,CAAgC,CAC9B,MACD,CACF,CACD,MAAO,CAACF,WAAW,CAAGC,EAAE,CAACI,CAAD,CAAF,CAAMH,KAArB,EAA4BK,OAA5B,CAAoC,CAApC,EAAuCC,OAAvC,CAA+CJ,EAA/C,CAAmD,IAAnD,EAA2DH,EAAE,CAACI,CAAD,CAAF,CAAMF,MAAxE,CACD,CAlBD,CAoBA,cAAeJ,CAAAA,YAAf","sourcesContent":["const numberFormat = (inputNumber: number) => {\n  const si = [\n    { value: 1, symbol: \"\" },\n    { value: 1E3, symbol: \" K\" },\n    { value: 1E6, symbol: \" M\" },\n    { value: 1E9, symbol: \" B\" },\n    { value: 1E12, symbol: \" T\" },\n    { value: 1E15, symbol: \" P\" },\n    { value: 1E18, symbol: \" E\" }\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (inputNumber >= si[i].value) {\n      break;\n    }\n  }\n  return (inputNumber / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n}\n\nexport default numberFormat;"]},"metadata":{},"sourceType":"module"}