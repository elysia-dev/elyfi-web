{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\jamaica\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./i18n/i18n\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useTranslation } from 'react-i18next';\nimport Main from './modules/pc/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    i18n\n  } = useTranslation();\n  const isPc = useMediaQuery({\n    query: \"(min-width: 768px)\"\n  });\n  useEffect(() => {\n    // ref http://www.lingoes.net/en/translator/langcode.htm\n    const lang = navigator.language;\n\n    if (lang.includes('ko')) {\n      i18n.changeLanguage('ko');\n    } else if (lang.includes('zh')) {\n      i18n.changeLanguage('zh');\n    }\n  }, []);\n\n  const PcRouter = () => {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n\n  const MobileRouter = () => {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n\n  return isPc ? /*#__PURE__*/_jsxDEV(PcRouter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(MobileRouter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"vvb23ENYDh9WCacvPWqVozFF71w=\", false, function () {\n  return [useTranslation, useMediaQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dev/jamaica/src/App.tsx"],"names":["React","useEffect","Switch","Route","BrowserRouter","Router","useMediaQuery","useTranslation","Main","App","i18n","isPc","query","lang","navigator","language","includes","changeLanguage","PcRouter","MobileRouter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,aAAa,IAAIC,MAHnB,QAIO,kBAJP;AAKA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,cAAc,EAA/B;AACA,QAAMI,IAAI,GAAGL,aAAa,CAAC;AACzBM,IAAAA,KAAK,EAAE;AADkB,GAAD,CAA1B;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMY,IAAI,GAAGC,SAAS,CAACC,QAAvB;;AAEA,QAAIF,IAAI,CAACG,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACvBN,MAAAA,IAAI,CAACO,cAAL,CAAoB,IAApB;AACD,KAFD,MAEO,IAAIJ,IAAI,CAACG,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC9BN,MAAAA,IAAI,CAACO,cAAL,CAAoB,IAApB;AACD;AACF,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,QAAQ,GAAG,MAAM;AACrB,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD;;AAWA,QAAMC,YAAY,GAAG,MAAM;AACzB,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD;;AAYA,SACER,IAAI,gBACF,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAJJ;AAMD,CA9CD;;GAAMF,G;UACaF,c,EACJD,a;;;KAFTG,G;AAgDN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport \"./i18n/i18n\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useTranslation } from 'react-i18next';\nimport Main from './modules/pc/Main';\n\nconst App = () => {\n  const { i18n } = useTranslation();\n  const isPc = useMediaQuery({\n    query: \"(min-width: 768px)\"\n  });\n\n  useEffect(() => {\n    // ref http://www.lingoes.net/en/translator/langcode.htm\n    const lang = navigator.language;\n\n    if (lang.includes('ko')) {\n      i18n.changeLanguage('ko')\n    } else if (lang.includes('zh')) {\n      i18n.changeLanguage('zh')\n    }\n  }, [])\n\n  const PcRouter = () => {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n  const MobileRouter = () => {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n\n  return (\n    isPc ?\n      <PcRouter />\n      : \n      <MobileRouter />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}