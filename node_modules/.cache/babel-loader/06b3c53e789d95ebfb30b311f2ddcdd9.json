{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/providers/TokenProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport TokenContext, { initialTokenContext } from '../contexts/TokenContext';\nimport AssetTypes from '../enums/AssetType';\nimport TokenTypes from '../enums/TokenType';\nimport Token000 from '../shared/images/tokens/el.png';\nimport Token001 from '../shared/images/tokens/eth.png';\nimport Token002 from '../shared/images/tokens/bnb.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenProvider = props => {\n  _s();\n\n  const [state, setState] = useState(initialTokenContext);\n\n  const stateSetting = () => {\n    setState({ ...state,\n      tokenlist: [{\n        tokenName: \"ELA001\",\n        type: TokenTypes.ASSETS,\n        image: AssetTypes.COMMERCIAL,\n        marketSize: 564651234,\n        totalBorrowed: 2323123321323423,\n        depositApy: 29.2,\n        borrowApr: 1.23\n      }, {\n        tokenName: \"ELA002\",\n        type: TokenTypes.ASSETS,\n        image: AssetTypes.RESIDENTIAL,\n        marketSize: 23123123123,\n        totalBorrowed: 0,\n        depositApy: 4.422,\n        borrowApr: 20\n      }, {\n        tokenName: \"ELA003\",\n        type: TokenTypes.ASSETS,\n        image: AssetTypes.COMMERCIAL,\n        marketSize: 11123132213133,\n        totalBorrowed: 23214123232,\n        depositApy: 3.3,\n        borrowApr: 44\n      }, {\n        tokenName: \"EL\",\n        type: TokenTypes.CRYPTO,\n        image: Token000,\n        marketSize: 312312233,\n        totalBorrowed: 33121233,\n        depositApy: 2.93,\n        borrowApr: 192\n      }, {\n        tokenName: \"ETH\",\n        type: TokenTypes.CRYPTO,\n        image: Token001,\n        marketSize: 0\n      }, {\n        tokenName: \"BNB\",\n        type: TokenTypes.CRYPTO,\n        image: Token002,\n        marketSize: 11323123213,\n        totalBorrowed: 2212312312312,\n        depositApy: 0.33,\n        borrowApr: 0\n      }]\n    });\n  };\n\n  const SortToken = async (key, ascending, tokenType) => {\n    return function (a, b) {\n      if (a[key] === b[key]) {\n        return 0;\n      } else if (a[key] === null) {\n        return 1;\n      } else if (b[key] === null) {\n        return -1;\n      } else if (ascending) {\n        return a[key] < b[key] ? -1 : 1;\n      } else {\n        return a[key] < b[key] ? 1 : -1;\n      }\n    };\n  };\n\n  const TokenReturn = async (key, ascending, tokenType) => {\n    let arrayCopy = state.tokenlist;\n    arrayCopy.sort(await SortToken(key, ascending, tokenType));\n    setState({ ...state,\n      tokenlist: arrayCopy\n    });\n  };\n\n  useEffect(() => {\n    stateSetting();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: { ...state,\n      TokenReturn\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenProvider, \"/zfA0gFXdXDykeQWr3eIFMeer14=\");\n\n_c = TokenProvider;\nexport default TokenProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/providers/TokenProvider.tsx"],"names":["useEffect","useState","TokenContext","initialTokenContext","AssetTypes","TokenTypes","Token000","Token001","Token002","TokenProvider","props","state","setState","stateSetting","tokenlist","tokenName","type","ASSETS","image","COMMERCIAL","marketSize","totalBorrowed","depositApy","borrowApr","RESIDENTIAL","CRYPTO","SortToken","key","ascending","tokenType","a","b","TokenReturn","arrayCopy","sort","children"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport TokenContext, { initialTokenContext, ITokenContext } from '../contexts/TokenContext'\nimport AssetTypes from '../enums/AssetType';\nimport TokenTypes from '../enums/TokenType';\nimport Token000 from '../shared/images/tokens/el.png';\nimport Token001 from '../shared/images/tokens/eth.png';\nimport Token002 from '../shared/images/tokens/bnb.png';\nimport { TokenList } from '../types/TokenList';\n\nconst TokenProvider: React.FC = (props) => {\n  const [state, setState] = useState<ITokenContext>(initialTokenContext);\n\n  const stateSetting = () => {\n    setState({\n      ...state,\n      tokenlist: [\n        {\n          tokenName: \"ELA001\",\n          type: TokenTypes.ASSETS,\n          image: AssetTypes.COMMERCIAL,\n          marketSize: 564651234,\n          totalBorrowed: 2323123321323423,\n          depositApy: 29.2,\n          borrowApr: 1.23\n        },\n        {\n          tokenName: \"ELA002\",\n          type: TokenTypes.ASSETS,\n          image: AssetTypes.RESIDENTIAL,\n          marketSize: 23123123123,\n          totalBorrowed: 0,\n          depositApy: 4.422,\n          borrowApr: 20\n        },\n        {\n          tokenName: \"ELA003\",\n          type: TokenTypes.ASSETS,\n          image: AssetTypes.COMMERCIAL,\n          marketSize: 11123132213133,\n          totalBorrowed: 23214123232,\n          depositApy: 3.3,\n          borrowApr: 44\n        },\n        {\n          tokenName: \"EL\",\n          type: TokenTypes.CRYPTO,\n          image: Token000,\n          marketSize: 312312233,\n          totalBorrowed: 33121233,\n          depositApy: 2.93,\n          borrowApr: 192\n        },\n        {\n          tokenName: \"ETH\",\n          type: TokenTypes.CRYPTO,\n          image: Token001,\n          marketSize: 0,\n        },\n        {\n          tokenName: \"BNB\",\n          type: TokenTypes.CRYPTO,\n          image: Token002,\n          marketSize: 11323123213,\n          totalBorrowed: 2212312312312,\n          depositApy: 0.33,\n          borrowApr: 0\n        },\n      ]\n    })\n  }\n\n  const SortToken = async (key: \"marketSize\" | \"totalBorrowed\" | \"depositApy\" | \"borrowApr\" , ascending: boolean, tokenType: TokenTypes) => {\n    return function (a: TokenList, b: TokenList) {\n      if (a[key] === b[key]) {\n        return 0;\n      } else if (a[key] === null) {\n        return 1;\n      } else if (b[key] === null) {\n        return -1;\n      } else if (ascending) {\n        return a[key]! < b[key]! ? -1 : 1;\n      } else {\n        return a[key]! < b[key]! ? 1 : -1;\n      }\n    }\n  }\n  const TokenReturn = async (key: \"marketSize\" | \"totalBorrowed\" | \"depositApy\" | \"borrowApr\", ascending: boolean, tokenType: TokenTypes) => {\n    let arrayCopy: TokenList[] = state.tokenlist;\n    arrayCopy.sort(await SortToken(key, ascending, tokenType))\n    setState({\n      ...state,\n      tokenlist: arrayCopy\n    })\n  }\n  useEffect(() => {\n    stateSetting();\n  } ,[])\n\n  return (\n    <TokenContext.Provider value={{\n      ...state,\n      TokenReturn\n    }}>\n      {props.children}\n    </TokenContext.Provider>\n  );\n}\n\nexport default TokenProvider;"]},"metadata":{},"sourceType":"module"}