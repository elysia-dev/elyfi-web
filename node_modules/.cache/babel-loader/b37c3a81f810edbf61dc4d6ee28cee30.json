{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/providers/LanguageProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport LanguageContext, { initialLanguageContext } from '../contexts/LanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenProvider = props => {\n  _s();\n\n  const [state, setState] = useState(initialLanguageContext);\n  const {\n    i18n\n  } = useTranslation();\n\n  const setLanguage = language => {\n    i18n.changeLanguage(language);\n    setState({ ...state,\n      language\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: { ...state,\n      setLanguage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenProvider, \"S5EsDolgFoD5v29ih/rsKR2NMhk=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TokenProvider;\nexport default TokenProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/providers/LanguageProvider.tsx"],"names":["useState","useTranslation","LanguageContext","initialLanguageContext","TokenProvider","props","state","setState","i18n","setLanguage","language","changeLanguage","children"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,eAAP,IAA0BC,sBAA1B,QAA0E,6BAA1E;;;AAGA,MAAMC,aAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAmBG,sBAAnB,CAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWP,cAAc,EAA/B;;AAEA,QAAMQ,WAAW,GAAIC,QAAD,IAA4B;AAC9CF,IAAAA,IAAI,CAACG,cAAL,CAAoBD,QAApB;AACAH,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPI,MAAAA;AAFO,KAAD,CAAR;AAID,GAND;;AAQA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,EAC/B,GAAGJ,KAD4B;AAE/BG,MAAAA;AAF+B,KAAjC;AAAA,cAIGJ,KAAK,CAACO;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApBD;;GAAMR,a;UAEaH,c;;;KAFbG,a;AAsBN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport LanguageContext, { initialLanguageContext, ILanguageContext } from '../contexts/LanguageContext';\nimport LanguageType from '../enums/LanguageType';\n\nconst TokenProvider: React.FC = (props) => {\n  const [state, setState] = useState<ILanguageContext>(initialLanguageContext);\n  const { i18n } = useTranslation();\n\n  const setLanguage = (language: LanguageType) => {\n    i18n.changeLanguage(language)\n    setState({\n      ...state,\n      language\n    })\n  }\n\n  return (\n    <LanguageContext.Provider value={{\n      ...state,\n      setLanguage\n    }}>\n      {props.children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport default TokenProvider;"]},"metadata":{},"sourceType":"module"}