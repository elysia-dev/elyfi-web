{"ast":null,"code":"var _jsxFileName = \"/Users/hyunobae/dev/jamaica/src/providers/WalletProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport WalletContext, { initialWalletContext } from '../contexts/WalletContext';\nimport UserType from '../enums/UserType';\nimport { useWeb3React } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletProvider = (props, triedEager) => {\n  _s();\n\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const [state, setState] = useState(initialWalletContext);\n  const TempCollateralAddress = \"0x6A040998EeB628Cf40683833812F0463C4FC79F9\";\n  const TempBorrowerAddress = \"0xB91e9f737B2227E92A373fb071b66B10eC6770d0\";\n  let throttle_flag = false;\n\n  const throttle = (func, delay) => {\n    if (!throttle_flag) {\n      func();\n      throttle_flag = true;\n      setTimeout(() => {\n        throttle_flag = false;\n      }, delay);\n    }\n  };\n\n  useEffect(() => {\n    if (account) {\n      throttle(() => setState({ ...state,\n        address: account\n      }), 500);\n    }\n\n    setState({ ...state,\n      active: !!account,\n      chainId: chainId\n    });\n\n    switch (account) {\n      case TempCollateralAddress:\n        setState({ ...state,\n          userType: UserType.Collateral\n        });\n        break;\n\n      case TempBorrowerAddress:\n        setState({ ...state,\n          userType: UserType.Borrowers\n        });\n        break;\n\n      default:\n        if (!!account) {\n          setState({ ...state,\n            userType: UserType.Guest\n          });\n        } else {\n          setState({ ...state,\n            userType: UserType.User\n          });\n        }\n\n    }\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(WalletContext.Provider, {\n    value: { ...state\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletProvider, \"dlvUBGB4rdPdpclFmUROsrCvbTQ=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = WalletProvider;\nexport default WalletProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletProvider\");","map":{"version":3,"sources":["/Users/hyunobae/dev/jamaica/src/providers/WalletProvider.tsx"],"names":["useEffect","useState","WalletContext","initialWalletContext","UserType","useWeb3React","WalletProvider","props","triedEager","account","chainId","state","setState","TempCollateralAddress","TempBorrowerAddress","throttle_flag","throttle","func","delay","setTimeout","address","active","userType","Collateral","Borrowers","Guest","User","children"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,IAAwBC,oBAAxB,QAAoE,2BAApE;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAEA,MAAMC,cAAwB,GAAG,CAACC,KAAD,EAAQC,UAAR,KAA4B;AAAA;;AAC3D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBL,YAAY,EAAzC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAiBE,oBAAjB,CAAlC;AAEA,QAAMU,qBAAqB,GAAG,4CAA9B;AACA,QAAMC,mBAAmB,GAAG,4CAA5B;AAEA,MAAIC,aAAa,GAAG,KAApB;;AACA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAmBC,KAAnB,KAAqC;AACpD,QAAI,CAACH,aAAL,EAAoB;AAClBE,MAAAA,IAAI;AACJF,MAAAA,aAAa,GAAG,IAAhB;AACAI,MAAAA,UAAU,CAAC,MAAM;AACfJ,QAAAA,aAAa,GAAG,KAAhB;AACD,OAFS,EAEPG,KAFO,CAAV;AAGD;AACF,GARD;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAJ,EAAa;AACXO,MAAAA,QAAQ,CAAC,MAAMJ,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYS,QAAAA,OAAO,EAAEX;AAArB,OAAD,CAAf,EAAiD,GAAjD,CAAR;AACD;;AACDG,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYU,MAAAA,MAAM,EAAE,CAAC,CAACZ,OAAtB;AAA+BC,MAAAA,OAAO,EAAEA;AAAxC,KAAD,CAAR;;AAEA,YAAQD,OAAR;AACE,WAAKI,qBAAL;AACED,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYW,UAAAA,QAAQ,EAAElB,QAAQ,CAACmB;AAA/B,SAAD,CAAR;AACA;;AACF,WAAKT,mBAAL;AACEF,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYW,UAAAA,QAAQ,EAAElB,QAAQ,CAACoB;AAA/B,SAAD,CAAR;AACA;;AACF;AACE,YAAG,CAAC,CAACf,OAAL,EAAc;AACZG,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYW,YAAAA,QAAQ,EAAElB,QAAQ,CAACqB;AAA/B,WAAD,CAAR;AACD,SAFD,MAEO;AACLb,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYW,YAAAA,QAAQ,EAAElB,QAAQ,CAACsB;AAA/B,WAAD,CAAR;AACD;;AAZL;AAcD,GApBQ,EAoBN,CAACjB,OAAD,CApBM,CAAT;AAwBA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,EAC7B,GAAGE;AAD0B,KAA/B;AAAA,cAGGJ,KAAK,CAACoB;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjDD;;GAAMrB,c;UACyBD,Y;;;KADzBC,c;AAmDN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport WalletContext, { initialWalletContext, IWalletContext } from '../contexts/WalletContext';\nimport UserType from '../enums/UserType';\nimport { useWeb3React } from '@web3-react/core';\n\nconst WalletProvider: React.FC = (props, triedEager: any) => {\n  const { account, chainId } = useWeb3React();\n  const [state, setState] = useState<IWalletContext>(initialWalletContext);\n\n  const TempCollateralAddress = \"0x6A040998EeB628Cf40683833812F0463C4FC79F9\";\n  const TempBorrowerAddress = \"0xB91e9f737B2227E92A373fb071b66B10eC6770d0\";\n\n  let throttle_flag = false;\n  const throttle = (func: () => void, delay: number) => {\n    if (!throttle_flag) {\n      func();\n      throttle_flag = true;\n      setTimeout(() => {\n        throttle_flag = false;\n      }, delay);\n    }\n  };\n\n  useEffect(() => {\n    if (account) {\n      throttle(() => setState({ ...state, address: account }), 500);\n    }\n    setState({ ...state, active: !!account, chainId: chainId });\n\n    switch (account) {\n      case TempCollateralAddress:\n        setState({ ...state, userType: UserType.Collateral })\n        break;\n      case TempBorrowerAddress:\n        setState({ ...state, userType: UserType.Borrowers })\n        break;\n      default:\n        if(!!account) {\n          setState({ ...state, userType: UserType.Guest })\n        } else {\n          setState({ ...state, userType: UserType.User })\n        }\n    }\n  }, [account]);\n\n\n\n  return (\n    <WalletContext.Provider value={{\n      ...state\n    }}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n\nexport default WalletProvider;"]},"metadata":{},"sourceType":"module"}